#Copy the latest snap_connection_manager.py to binary folder in the debian package and rename it then move to that folder
cp snap_connection_manager.py snap_connection_1.0_all/usr/bin/snap_connection_manager_1_0.py
cd snap_connection_1.0_all/usr/bin/

##Change the path to the ICON's used by the application to the correct linux installation as according to my debian package structure.
#Also centralize it and the below variable setting
DATA_DIR      = "/usr/share/snap_connection_manager/"
FOLDER_ICON   = os.path.join(DATA_DIR, "folder.png")
SERVER_ICON   = os.path.join(DATA_DIR, "server.png")

#Down in start of Chunk2 when loading Folder and Server icon change to FOLDER_ICON and SERVER_ICON as:
    #Remove:
        # load folder/server icons
        base = os.path.dirname(__file__)
        self.folder_icon = GdkPixbuf.Pixbuf.new_from_file(
            os.path.join(base, "folder.png")
        )
        self.server_icon = GdkPixbuf.Pixbuf.new_from_file(
            os.path.join(base, "server.png")
        )

    #And replace with: 
        # load folder/server icons
        self.folder_icon = GdkPixbuf.Pixbuf.new_from_file(FOLDER_ICON)
        self.server_icon = GdkPixbuf.Pixbuf.new_from_file(SERVER_ICON)

#########################
# Create debian package #
#########################
#Create the files and folder structure as per:
snap_connection_1.0_all/
├── DEBIAN/
│   ├── control
|   ├── postinst
│   └── postrm
├── usr/
    └── bin/
    │  └── snap_connection_manager_1_0.py
    └── share/
        └── applications/
        │   └── snap_connection_manager.desktop
        ├── icons/
        │  └── hicolor/
        │        └── 512x512/
        │            └── apps/
        │                └── snap_icon.png
        └── snap_connection_manager/
            ├── folder.png
            ├── server.png
            └── readme.md    



##Where the following is:
#File DEBIAN/control:
Package: snap-connection-manager
Version: 1.0
Architecture: all
Depends: python3, python3-gi, gnupg, python3-gnupg, expect, openssh-client, gnome-terminal | x-terminal-emulator
Maintainer: Tomas Larsson <larre.b.larsson@gmail.com>
Description: Snap Connection Manager is a very slimmed down SSH/SFTP Connection Manager

#File DEBIAN/postrm is:
Is to correclty purge the two settings file ssh_servers.json and snap_cm_settings.json when unstalling the program.
Now especially purging the ssh_servers.json wich will lead to that user has to set a new passphrase at next installation.
If not purge uninstall will then lead that the server users data is retained but of course the passphrase nneds to be
remenbered by the user and to be able to open the program needs to be given and valid. All for safty!

#File usr/bin/snap_connection_manager_1_0.pyc
py3compile compiled snap_connection_manager_1_0.py script file

#File usr/share/applications/snap_connection_manager.desktop:
[Desktop Entry]
Name=Snap Connection Manager
Exec=python3 /usr/bin/snap_connection_manager_1_0.py
Icon=/usr/share/icons/hicolor/512x512/apps/snap_icon.png
Terminal=false
Type=Application
StartupWMClass=snap_connection_manager_1_0.py
Categories=Utility;

#File usr/share/snap_connection_manager
Your projects resource directory containing all data files needed
Here we put:
folder.png
server.png
readme.md

#File  usr/share/icons/hicolor/512x512/apps/snap_icon.png:
Your Application ICON image

#If needed set permission to 775 recursive on all in folder
chmod -R 775 snap_connection_1.0_all/
#Then build you deb pack by:
sudo dpkg-deb --root-owner-group --build snap_connection_1.0_all

#This then results in the following deb pack:
snap_connection_1.0_all.deb

#This then we can install using:
sudo apt install ./snap_connection_1.0_all.deb
#Note use the above method to get all dependencies to be installed

#To list our debian package
sudo dpkg -l | grep -i snap-conn

#To uninstall:
sudo dpkg -i snap_connection_1.0_all.deb

#Including removing all configuration do:
sudo dpkg --purge snap-connection-manager

###########################
# Create a APT Repository #
###########################
# Create directory structure and copy .deb file
mkdir -p snap_repo/apt-repo
cd snap_repo/apt-repo
mkdir -p pool/main
mkdir -p dists/stable/main/binary-all
cp snap_connection_1.0_all.deb pool/main

#Generate package and zip it 
apt-ftparchive packages pool/main > dists/stable/main/binary-all/Packages. 
#or use dpkg-scanpackages -a all pool/ > dists/stable/main/binary-all/Packages
cat dists/stable/main/binary-all/Packages | gzip -9 > dists/stable/main/binary-all/Packages.gz

#Generate release file
apt-ftparchive release . > dists/stable/Release





#############################
# Install pillown and gnupg #
#############################
sudo apt update
sudo apt-get install python3-pil python3-pil.imagetk python3-venv python3-tk
sudo apt-get install python3-gnupg

